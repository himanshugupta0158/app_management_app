services:
  db:
    image: postgres:15-alpine
    container_name: app_postgres
    environment:
      POSTGRES_DB: app_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: app_redis
    ports:
      - "6379:6379"
    networks:
      - backend

  backend:
    build:
      context: ./backend
    container_name: app_backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      POSTGRES_DB: app_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: db
      REDIS_URL: redis://redis:6379
    networks:
      - backend
      - frontend

  celery:
    build:
      context: ./backend
    container_name: app_celery
    command: celery -A core worker --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - backend
    environment:
      REDIS_URL: redis://redis:6379
    networks:
      - backend

  frontend:
    build:
      context: ./frontend
    container_name: app_frontend
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    networks:
      - frontend
    command: sh -c "npm install && npm run dev"

volumes:
  postgres_data:

networks:
  backend:
  frontend:
